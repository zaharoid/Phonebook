{"version":3,"file":"static/js/687.53a4e267.chunk.js","mappings":"sMAEaA,EAAcC,EAAAA,EAAAA,IAAH,uGAOXC,EAAWD,EAAAA,EAAAA,IAAH,sGAMRE,EAASF,EAAAA,EAAAA,IAAH,wEAKNG,EAAOH,EAAAA,EAAAA,IAAH,mO,SCSjB,EA3Bc,WACZ,OACE,SAACD,EAAD,WACE,SAACG,EAAD,WACE,UAACD,EAAD,YACE,UAACE,EAAD,WACG,IAAI,uUAOP,UAACA,EAAD,WACG,IAAI,4UAWhB,C,sECzBYC,E,QAASJ,EAAAA,GAAH,4D,iKCDNK,EAAcL,EAAAA,EAAAA,IAAH,uUAmBXM,EAAQN,EAAAA,EAAAA,MAAH,sJAcLO,GALeP,EAAAA,EAAAA,IAAH,wDAKJA,EAAAA,EAAAA,MAAH,qrBA4BLQ,EAASR,EAAAA,EAAAA,OAAH,miC,iQC1DNS,GAAYT,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,iGAQTU,GAAUV,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,sBAEPW,GAAaX,EAAAA,EAAAA,GAAOI,EAAAA,EAAPJ,CAAH,qDAIVY,GAAgBZ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,oNAWba,GAAYb,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,2DAITc,EAAYd,EAAAA,EAAAA,IAAH,wHAMTe,EAAOf,EAAAA,EAAAA,KAAH,0K,8LCwCjB,EAhEkB,WAChB,OAA8CgB,EAAAA,EAAAA,IAAQ,CACpDC,cAAe,CACbC,MAAO,GACPC,SAAU,MAHNC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,UAM1BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,mCAAG,WAAOC,EAAMC,GAAb,uFACGJ,EAASK,EAAAA,EAAAA,MAAqBF,IADjC,YACTG,EADS,QAEPC,KAAKC,kBAFE,uBAGbC,EAAAA,OAAAA,QAAA,gEAHa,0BAQfA,EAAAA,OAAAA,QAAA,0BAAkCH,EAAII,QAAQC,KAAKC,KAAnD,OACAR,EAAES,OAAOC,QATM,2CAAH,wDAYd,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAY,aACZ,iBAAMC,aAAa,MAAMb,SAAUJ,EAAaI,GAAhD,UACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAM,WACN,SAAC,MAAD,QACEc,KAAK,QACLJ,KAAK,SACDf,EAAS,QAAS,CAAEoB,UAAU,UAGtC,UAAC,KAAD,YACE,SAAC,KAAD,UAAM,cACN,SAAC,MAAD,QACED,KAAK,WACLJ,KAAK,YACDf,EAAS,WAAY,CAAEoB,UAAU,EAAMC,UAAW,UAI1D,UAAC,KAAD,CAASF,KAAK,SAASG,UAAWpB,EAAUqB,QAA5C,UAAqD,UAElDrB,EAAUsB,eACT,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,SAAS,EACTC,YAAa,cAQ5B,ECjED,EATc,WACZ,OACE,iCACE,SAACC,EAAA,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/About/About.styled.jsx","components/About/About.jsx","components/App/App.styled.jsx","components/Form.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  overflow: hidden;\n`;\n\nexport const Scroller = styled.div`\n  display: flex;\n  gap: 5px;\n  animation: RightToLeft 20s infinite linear;\n`;\n\nexport const Scroll = styled.div`\n  white-space: nowrap;\n  padding-bottom: 4px;\n`;\n\nexport const Info = styled.div`\n  margin-bottom: 0;\n  line-height: 10px;\n  color: #d3ced2;\n\n  @keyframes RightToLeft {\n    from {\n      transform: translateX(0%);\n    }\n    to {\n      transform: translateX(-50%);\n    }\n  }\n`;\n","import { Info, InfoWrapper, Scroll, Scroller } from './About.styled';\n\nconst About = () => {\n  return (\n    <InfoWrapper>\n      <Scroll>\n        <Scroller>\n          <Info>\n            {' '}\n            Greetings, buddy. With this app you can store your contacts so you\n            don't have to memorize them by heart :). You don't have to worry\n            about the privacy of your data, only you can see your contacts, if\n            it's your first time here, go to the registration page and fill out\n            the form, if you have your own contacts, just log in.\n          </Info>\n          <Info>\n            {' '}\n            Greetings, buddy. With this app you can store your contacts so you\n            don't have to memorize them by heart :). You don't have to worry\n            about the privacy of your data, only you can see your contacts, if\n            it's your first time here, go to the registration page and fill out\n            the form, if you have your own contacts, just log in.\n          </Info>\n        </Scroller>\n      </Scroll>\n    </InfoWrapper>\n  );\n};\n\nexport default About;\n","import styled from '@emotion/styled';\n\nexport const Title1 = styled.h1`\n  text-align: center;\n  margin: 0;\n`;\n","import styled from '@emotion/styled';\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 220px;\n  border: solid 3px #84c7df;\n  padding: 15px;\n  border-radius: 5px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  @media only screen and (min-width: 768px) {\n    gap: 20px;\n    width: 275px;\n    padding: 15px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  font-family: 'Montserrat', sans-serif;\n\n  text-align: center;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  background-image: linear-gradient(#20aee3, #20aee3),\n    linear-gradient(#bfbfbf, #bfbfbf);\n  border: 0 none;\n  border-radius: 0;\n  box-shadow: none;\n  float: none;\n  background-color: transparent;\n  background-position: center bottom, center calc(100% - 1px);\n  background-repeat: no-repeat;\n  background-size: 0 2px, 100% 1px;\n  padding: 0;\n  padding-left: 10px;\n  transition: background 0s ease-out 0s;\n  color: #979797;\n  min-height: 35px;\n  display: initial;\n  width: 100%;\n  outline: none;\n  font-size: 15px;\n  &:focus {\n    background-size: 100% 2px, 100% 1px;\n    outline: 0 none;\n    transition-duration: 0.3s;\n    color: #111;\n  }\n`;\n\nexport const Button = styled.button`\n  text-decoration: none;\n  display: flex;\n  gap: 10px;\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 220px;\n  height: 42.5px;\n  line-height: 35px;\n  border-radius: 45px;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 9px;\n  text-transform: uppercase;\n  justify-content: center;\n  align-items: center;\n  letter-spacing: 3px;\n  font-weight: 400;\n  color: #524f4e;\n  background: var(--milk-white);\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n  transition: 0.3s;\n\n  &:hover {\n    background: #17a6db;\n    box-shadow: 0 10px 15px rgba(120, 164, 231, 0.4);\n    color: var(--milk-white);\n    transform: translateY(-2px);\n    cursor: pointer;\n  }\n  &:disabled {\n    background: var(--milk-white);\n    color: #524f4e;\n    :hover {\n      background: var(--button-disabled);\n      box-shadow: none;\n      color: var(--milk-white);\n      transform: none;\n      cursor: not-allowed;\n      box-shadow: 0 10px 15px rgba(250, 133, 16, 0.4);\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { FormWrapper, Label, Input, Button } from 'components/Form.styled';\nimport { Title1 } from 'components/App/App.styled';\n\nexport const UserInput = styled(Input)`\n  &:active {\n    color: #fff;\n  }\n  &:focus {\n    color: #fff;\n  }\n`;\nexport const UserBtn = styled(Button)``;\n\nexport const FormTitle1 = styled(Title1)`\n  color: var(--milk-white);\n`;\n\nexport const FormContainer = styled(FormWrapper)`\n  @media only screen and (min-width: 320px) {\n    width: 270px;\n    margin-top: 10px;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n    margin-top: 25px;\n  }\n`;\n\nexport const FormLabel = styled(Label)`\n  margin-bottom: 30px;\n  gap: 0;\n`;\nexport const Container = styled.div`\n  margin-top: 30px;\n  @media only screen and (min-width: 768px) {\n    margin-top: 70px;\n  }\n`;\nexport const Span = styled.span`\n  display: block;\n  width: 100px;\n  margin: 0 auto;\n  color: var(--milk-white);\n  border-bottom: solid 0.2px #5f5e5f;\n  padding-bottom: 3px;\n`;\n\n// #20aee3\n","import {\n  FormContainer,\n  FormLabel,\n  Container,\n  Span,\n  FormTitle1,\n  UserInput,\n  UserBtn,\n} from 'components/RegisterForm/RegisterForm.styled';\nimport { Oval } from 'react-loader-spinner';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/operations';\nimport { Notify } from 'notiflix';\n\nconst LoginForm = () => {\n  const { register, handleSubmit, formState } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = async (data, e) => {\n    const res = await dispatch(authOperations.login(data));\n    if (res.meta.rejectedWithValue) {\n      Notify.failure(\n        `We could not find such a user, please check the entered data`\n      );\n      return;\n    }\n    Notify.success(`We welcome you, ${res.payload.user.name} )`);\n    e.target.reset();\n  };\n\n  return (\n    <Container>\n      <FormTitle1>Sign in</FormTitle1>\n      <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n        <FormContainer>\n          <FormLabel>\n            <Span>Email</Span>\n            <UserInput\n              type=\"email\"\n              name=\"email\"\n              {...register('email', { required: true })}\n            />\n          </FormLabel>\n          <FormLabel>\n            <Span>Password</Span>\n            <UserInput\n              type=\"password\"\n              name=\"password\"\n              {...register('password', { required: true, minLength: 7 })}\n            />\n          </FormLabel>\n\n          <UserBtn type=\"submit\" disabled={!formState.isValid}>\n            Sign in\n            {formState.isSubmitting && (\n              <Oval\n                height=\"25\"\n                width=\"25\"\n                radius=\"9\"\n                color=\"#000000\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                visible={true}\n                strokeWidth={6}\n              />\n            )}\n          </UserBtn>\n        </FormContainer>\n      </form>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import About from 'components/About';\nimport LoginForm from 'components/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <About />\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["InfoWrapper","styled","Scroller","Scroll","Info","Title1","FormWrapper","Label","Input","Button","UserInput","UserBtn","FormTitle1","FormContainer","FormLabel","Container","Span","useForm","defaultValues","email","password","register","handleSubmit","formState","dispatch","useDispatch","onSubmit","data","e","authOperations","res","meta","rejectedWithValue","Notify","payload","user","name","target","reset","autoComplete","type","required","minLength","disabled","isValid","isSubmitting","height","width","radius","color","ariaLabel","wrapperStyle","visible","strokeWidth","About"],"sourceRoot":""}